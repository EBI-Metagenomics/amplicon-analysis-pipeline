
plugins {
    id 'nf-schema@2.3.0'
    id 'nf-prov@1.4.0'
}

params {

    input = null
    outdir = null
    private_study = false
    
    publish_dir_mode = 'copy'
    help = false

    // Reference databases //
    ssu_db_fasta                = ""
    ssu_db_tax                  = ""
    ssu_db_otu                  = ""
    ssu_db_mscluster            = ""
    ssu_label                   = "SILVA-SSU"

    lsu_db_fasta                = ""
    lsu_db_tax                  = ""
    lsu_db_otu                  = ""
    lsu_db_mscluster            = ""
    lsu_label                   = "SILVA-LSU"

    dada2_silva_label           = "DADA2-SILVA"
    dada2_pr2_label             = "DADA2-PR2"

    unite_db_fasta              = ""
    unite_db_tax                = ""
    unite_db_otu                = ""
    unite_db_mscluster          = ""
    unite_label                 = "UNITE"

    itsone_db_fasta             = ""
    itsone_db_tax               = ""
    itsone_db_otu               = ""
    itsone_db_mscluster         = ""
    itsone_label                = "ITSoneDB"

    pr2_db_fasta                = ""
    pr2_db_tax                  = ""
    pr2_db_otu                  = ""
    pr2_db_mscluster            = ""
    pr2_label                   = "PR2"

    rrnas_rfam_covariance_model = ""
    rrnas_rfam_claninfo         = ""

    std_primer_library  = []

    multiqc_config      = "$projectDir/assets/multiqc_config.yml"

    // mgnify-pipelines-toolkit version
    mpt_version         = "1.3.0--pyhdfd78af_0"
    // PIMENTO version
    pimento_version     = "1.0.2--pyhdfd78af_0"

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = ''
    validationShowHiddenParams       = false
    validate_params                  = true

    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss' ) // Config options

    save_trimmed_fail = true
}

// Set bash options
process.shell = [
    "bash",
    "-C",
    "-e",
    "-u",
    "-o",
    "pipefail",
]

prov {
    enabled = true
    formats {
        bco {
        file = "${params.outdir}/bco.json"
        overwrite = true
        }
    }
}

includeConfig 'conf/base.config'
includeConfig 'conf/modules.config'

profiles {
    codon_slurm {
        includeConfig 'conf/codon_slurm.config'
        includeConfig 'conf/codon_dbs.config'
    }

    local {
        includeConfig 'conf/local.config'
        includeConfig 'conf/local_dbs.config'
    }

    // This profile increase the dada2 cpus, mem and runtime limit
    // We will improve this, but as of now if you have a complex biome or deephtly sequences use this one
    large_samples {
        includeConfig 'conf/large_samples.config'
    }

    test {
        includeConfig 'conf/test.config'
        includeConfig 'conf/test_dbs.config'
    }

}

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'ebi-metagenomics/amplicon-analysis-pipeline'
    author          = """Microbiome Informatics Team - EMBL-EBI"""
    homePage        = 'https://github.com/EBI-Metagenomics/amplicon-analysis-pipeline'
    description     = """Microbiome Informatics metagenomes amplicon analysis pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0.0'
    doi             = ''
}
